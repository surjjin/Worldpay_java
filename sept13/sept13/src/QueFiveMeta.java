
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp
 */
public class QueFiveMeta extends java.awt.Frame {

    Connection con;
    DatabaseMetaData dbmd;
    public QueFiveMeta() {
        try {
            initComponents();
            con=new Connect().connectMysql();
            
            dbmd=con.getMetaData();
        } catch (SQLException ex) {
            Logger.getLogger(QueFiveMeta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        databaseLabel = new java.awt.Label();
        databaseChoice = new java.awt.Choice();
        tablesList = new java.awt.List();
        textArea1 = new java.awt.TextArea();
        tableLabel = new java.awt.Label();
        label1 = new java.awt.Label();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        databaseLabel.setText("Database");

        databaseChoice.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                databaseChoiceItemStateChanged(evt);
            }
        });

        tablesList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tablesListItemStateChanged(evt);
            }
        });

        tableLabel.setText("tables");

        label1.setBackground(new java.awt.Color(204, 255, 255));
        label1.setFont(new java.awt.Font("Lucida Sans", 3, 14)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 0, 0));
        label1.setText("DATABASE ADMIN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(tablesList, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(databaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(83, 83, 83)
                                        .addComponent(databaseChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(8, 8, 8))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(databaseChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(databaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(tablesList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(tableLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void databaseChoiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_databaseChoiceItemStateChanged
        try {
            tablesList.removeAll();
            String db=databaseChoice.getSelectedItem();
            /*Statement st1=con.createStatement();
            st1.execute("use "+db);*/
            PreparedStatement ps=con.prepareStatement("use "+db);
            ps.execute();
            
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("show tables");
            while(rs.next()){
                tablesList.add(rs.getString(1));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QueFiveMeta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_databaseChoiceItemStateChanged

    private void tablesListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tablesListItemStateChanged
        try {
            textArea1.setText("");
            String table=tablesList.getSelectedItem();
            Statement st=con.createStatement();
            
            ResultSet rs=st.executeQuery("select * from "+table);
            ResultSetMetaData rsmd=rs.getMetaData();
            int column=rsmd.getColumnCount();
            int i=0;
            for( i=1;i<=column;i++)
                textArea1.append(rsmd.getColumnName(i)+"\t");
            textArea1.append("\n");    
            while(rs.next()){
                for(i=1;i<=column;i++){
                    textArea1.append(rs.getString(i)+"\t");}
                textArea1.append("\n");
            }
        } catch (SQLException ex) {
            Logger.getLogger(QueFiveMeta.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_tablesListItemStateChanged

    public void fillDatabaseChoice(){
        try {
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery("show databases");
            while(rs.next()){
                databaseChoice.add(rs.getString(1));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(QueFiveMeta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QueFiveMeta obj=new QueFiveMeta();
                obj.setVisible(true);
                obj.fillDatabaseChoice();
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Choice databaseChoice;
    private java.awt.Label databaseLabel;
    private java.awt.Label label1;
    private java.awt.Label tableLabel;
    private java.awt.List tablesList;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
